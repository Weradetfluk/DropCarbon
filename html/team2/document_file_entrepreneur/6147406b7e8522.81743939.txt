การนำกลับมาใช้ใหม่
1. มีเอกสารกำกับการนำมาใช้ใหม่ (Reuse) 
2. มีการ Reuse ทั้ง Code และเอกสาร
ประเด็นการนำกลับมาใช้ใหม่
1. การนับจำนวนของการนำกลับมาใช้ใหม่คิดอย่างไร 
code - นับจากการเรียกใช้ function นั้นเป็นจำนวนครั้ง
เอกสาร - จะเป็นหมายเหตุอธิบายของแต่ละเอกสารว่า นับอย่างไร
เช่น checklist นับจากจำนวนเอกสารที่นำไป reuse 
header - footer นับจากจำนวนเอกสารที่นำไป reuse 
detailchart , PEER นับจากจำนวนสมาชิกของทีม
SRSD จะนำส่วนต่างๆของ version เก่านำมา reuse นับเป็น 1 ครั้งเท่านั้น

2. ใครเป็นผู้รับผิดชอบ (Key-man) แต่ละส่วนที่ Resue
- ในส่วนนี้มีผู้รับผิดชอบ แต่ละส่วนอยู่แต่ไม่ได้ทำการใส่ชื่อเข้าไปในเอกสาร reuse และจะทำการใส่ชื่อผู้ตรวจในส่วนที่ทำการ reuse 
3. มั่นใจได้อย่างไรว่าส่วนที่ให้คนอื่นนำไป Resue ไม่มีข้อบกพร่อง
เอกสาร - จะมีผู้รับผิดชอบหลักของการทำเอกสารนั้นๆอยู่แล้ว โดยผู้รับผิดชอบจะสร้าง template หรือ แบบฟอร์มไว้ใช้งาน
และพร้อมสำหรับการนำไป reuse อยู่แล้วในบางเอกสาร และ QA จะทำการตรวจเอกสาร version ที่เป็นต้นฉบับก่อน 
และทำการปรับแก้หากมีจุดผิดพลาดแล้วจึงจะสามารถทำการ reuse ต่อไปได้

4. ควรใส่วันที่กำกับในแต่ละ Version ด้วย
(กำหนดให้เป็นวันที่ ที่ทำการ update version )
การควบคุมการเปลี่ยนแปลง
1. จัดทำตารางควบคุมการเปลี่ยนแปลงในเอกสารต่างๆ ค่อนข้างเยอะ
ประเด็นการควบคุมการเปลี่ยนแปลง
1. มีการกำหนดหมายเลข version อย่างไร ทั้ง Code และ เอกสาร
1. Major หรือเลขตัวเเรก เปลี่ยนเมื่อ
       Code - เปลี่ยนเมื่อโค้ดของโมดูลหนึ่งถูกปรับแก้ในส่วนของไฟล์ model view controller ที่มีความเกี่ยวข้องกันของทั้ง MVC 
       แต่ถ้าหากเป็นการลบ functionทั้งหมดที่เกี่ยวข้องกันทั้งใน model view controller จะต้องถูกลบออกทั้งหมด 
       ถ้าหากเป็นไฟล์ view จะต้องลบในส่วนที่เรียกใช้ function 
2. Minor หรือเลขตัวกลาง เปลี่ยนเมื่อ
      Code -  เลข Minor จะเปลี่ยนเมื่อไฟล์โค้ดในส่วนของ model หรือ controller อย่างใดอย่างหนึ่งได้ทำการเพิ่ม function ใหม่เข้ามาและถูกนำไปเรียกใช้ในไฟล์อื่นๆ
      แต่ถ้าหากแก้ไขไฟล์ model หรือ controller อย่างใดอย่างหนึ่งและไม่ได้นำ function ไปเรียกใช้งาน เลข Minor จะไม่ถูกเปลี่ยน
      แต่ถ้าทำการลบ เลข Minor จะถูกเปลี่ยนเมื่อทำการลบ function ใน controller บาง function ออก 
      และส่วนที่เรียกใช้ function นี้ในหน้า view และถ้าหาก หน้า view เกิดการเปลี่ยนแปลง ก็จะต้องปรับเลข Patch ด้วยเช่นกัน 
3. Patch หรือเลขตัวท้ายสุด เปลี่ยนเมื่อ
       Code - เปลี่ยนเมื่อทำการแก้ไขโค้ดเพียงแค่ไฟล์เดียวในจุดใดจุดหนึ่ง
       ถ้าหากแก้ใขไฟล์ view  เลข Patch จะเปลี่ยนเมื่อโค้ดถูกปรับแก้แล้วทำให้หน้าเว็ปเกิดการเปลี่ยนแปลงเช่นสี, ตัวอักษร ,รูปภาพ และอื่่นๆ
       ถ้าหากแก้ใขไฟล์ model เลข Patch จะเปลี่ยนเมื่อโค้ดใน function ถูกปรับแก้ จะปรับแก้เพียงแค่ function เดียวหรือหลาย function ก็ได้
       เช่นปรับวิธีการ query ข้อมูล หรือเพิ่มลบเงื่อนไข
       ถ้าหากแก้ใขไฟล์ controller เลข Patch จะเปลี่ยนเมื่อโค้ดใน function ถูกปรับแก้ จะปรับแก้เพียงแค่ function เดียวหรือหลาย function ก็ได้ 
       เช่นการ ปรับการ load model การเรียกใช้ function จาก model หรือเพิ่มลบเงื่อนไข
เอกสาร
1.Major หรือเลขตัวเเรก เปลี่ยนเมื่อ
	การทำงานเปลี่ยนเป็น cycle ถัดไป 
2.Minor หรือเลขตัวกลาง เปลี่ยนเมื่อ
	การทำงานเปลี่ยนเป็น sprint ถัดไป 
3.Patch หรือเลขตัวท้ายสุด เปลี่ยนเมื่อ
	มีการแก้ไขใน sprint ปัจจุบันต่อ 1 ครั้ง
2. ใครเป็นผู้บันทึกข้อมูลการเปลี่ยนแปลง และบันทึกเมื่อใด
- ผู้บันทึกข้อมูลการเปลี่ยนแปลง คือผู้ที่ทำการเปลี่ยนแปลงและแก้ไขงาน 
- บันทึกเมื่อทำการเปลี่ยนแปลงและแก้ไขงานเสร็จเรียบร้อย และผ่านการตรวจของ QA 

	ตำแหน่ง : ฝ่ายสนับสนุน (RG8)
	เป้าหมายที่ 1 ทำหน้าที่ในการควบคุมการเปลี่ยนแปลง
	ตัวชี้วัด :   จดบันทึกทุกครั้งเมื่อมีการเปลี่ยนแปลงเกิดขึ้น มีเกณฑ์วัด 5 ระดับ ดังนี้
	ระดับ 5 : จดบันทึกการเปลี่ยนแปลงที่เกิดขึ้นทั้งหมด 
	ระดับ 4 : จดบันทึกการเปลี่ยนแปลงที่เกิดขึ้นร้อยละ 80 - 99 จากการเปลี่ยนแปลงทั้งหมด
	ระดับ 3 : จดบันทึกการเปลี่ยนแปลงที่เกิดขึ้นร้อยละ 70 - 79 จากการเปลี่ยนแปลงทั้งหมด
	ระดับ 2 : จดบันทึกการเปลี่ยนแปลงที่เกิดขึ้นร้อยละ 60 - 69 จากการเปลี่ยนแปลงทั้งหมด
	ระดับ 1 : จดบันทึกการเปลี่ยนแปลงที่เกิดขึ้นร้อยละ 50 - 59 จากการเปลี่ยนแปลงทั้งหมด
	หมายเหตุ : ฝ่ายสนับสนุนจดบันทึกการเปลี่ยนแปลง 1 ครั้งต่อ 1 แบบฟอร์ม CCR 
	        	ผลการประเมิน : ยังไม่สามารถประเมินได้เนื่องจากยังไม่มีการเปลี่ยนแปลงที่เกิดขึ้น	
	วิธีการประเมิน : 
	จำนวนแบบฟอร์ม CCR * 100จำนวนการเปลี่ยนแปลงที่เกิดขึ้นทั้งหมด